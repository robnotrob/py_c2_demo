import secrets
import random
class Malware():
    """
    Basic demo malware class.
    """
    def __init__(self, signal_byte):
        """ 
        Constructor for malware class

        Args:
            signal_byte (hex byte): signal byte for server to react to.
        """
        self.signal_byte = signal_byte
        
        
    def create_bits(self):
        """
        Creates 32 byte random hex value and replaces 5th hex byte with signale byte at a rate of 20%

        Returns:
            rand_bytes: byte-encoded hex string
        """
        chance_of_byte = random.choices([1,2], weights=[0.2, 0.8])[0]
        rand_bytes = secrets.token_hex(16)
        
        if chance_of_byte == 2:
            rand_bytes = rand_bytes[0:8] + self.signal_byte + rand_bytes[10:]
        
        return bytes.fromhex(rand_bytes)
        
